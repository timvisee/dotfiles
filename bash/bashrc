# ~/.bashrc: executed by bash for non-login shells.

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# Don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

if [ -n "`$SHELL -c 'echo $BASH_VERSION'`" ]; then
    # Append to the history file, don't overwrite it
    shopt -s histappend

    # Check the window size after each command and, if necessary,
    # update the values of LINES and COLUMNS.
    shopt -s checkwinsize

    # Enable programmable completion features
    if ! shopt -oq posix; then
        if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
        elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
        fi
    fi
fi

# Set the history length
HISTSIZE=1000
HISTFILESIZE=2000

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# Make less more friendly for non-text input files
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi


################################################################################


# Set some variables
export EDITOR=vim
export GPG_TTY=$(tty)

# Add PATHs
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.composer/vendor/bin:$PATH
export PATH=$HOME/.bitfactory/bin:$PATH

# Source aliasses
[ -f ~/.bash_aliases ] && . ~/.bash_aliases

# Set-up starship prompt
if [ -n "`$SHELL -c 'echo $BASH_VERSION'`" ]; then
    [ -n "$(which starship)" ] && eval "$(starship init bash)"
elif [ -n "`$SHELL -c 'echo $ZSH_VERSION'`" ]; then
    [ -n "$(which starship)" ] && eval "$(starship init zsh)"
fi

# Set-up keychain
which keychain > /dev/null && eval $(SHELL=bash keychain --eval --quiet --agents ssh,gpg id_rsa)

# Set-up Rust environment
[[ -f ~/.cargo/env ]] && . ~/.cargo/env

# Set-up nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Set-up fzf
if [ -n "`$SHELL -c 'echo $BASH_VERSION'`" ]; then
    [ -f ~/.fzf.bash ] && . ~/.fzf.bash
elif [ -n "`$SHELL -c 'echo $ZSH_VERSION'`" ]; then
    [ -f ~/.fzf.zsh ] && . ~/.fzf.zsh
fi

# Source functions
source ~/.bash_functions
